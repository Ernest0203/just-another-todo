{"version":3,"sources":["app/components/header/styles.module.scss","app/components/listItem/styles.module.scss","ui/elements/button/styles.module.scss","ui/elements/input/styles.module.scss","app/styles.module.scss","app/reducers/index.js","store.js","app/components/header/header.jsx","app/components/listItem/listItemComponent.jsx","ui/elements/button/Button.jsx","ui/elements/input/Input.jsx","app/components/listing/ListingComponent.jsx","app/containers/listingContainer.js","app/actions/actions.js","app/App.jsx","serviceWorker.js","index.js","app/components/listing/styles.module.scss"],"names":["module","exports","title","listItem","button","input","container","main","initialState","data","inputValue","general","state","arguments","length","undefined","action","type","Object","objectSpread","newData","toConsumableArray","item","id","Math","floor","random","text","splice","updatedData","filter","combinedReducers","combineReducers","store","createStore","applyMiddleware","thunk","Header","react_default","a","createElement","className","styles","ListItemComponent","props","content","removeItem","href","onClick","e","preventDefault","remove","Button","Input","_this$props","this","name","placeholder","onChange","target","value","Component","ListingComponent","getInputValue","addItem","map","listItemComponent","key","emptyList","listingContainer","listing","buttonContainer","input_Input","addNewItem","button_Button","connect","_state$general","dispatch","arg","App","header","Boolean","window","location","hostname","match","ReactDOM","render","es","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2b0d436.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1CUwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"styles_listItem__O5Dgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__MLkGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__3xdqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2MADr\",\"main\":\"styles_main__1639c\"};","const initialState = {\r\n  data: [],\r\n  inputValue: '',\r\n};\r\n\r\nconst general = (state = initialState, action) => {\r\n  switch(action.type) {\r\n\r\n    case 'ADD_ITEM':\r\n      if (!action.data) return { ...state };\r\n      const newData = [ ...state.data ];\r\n      const item = { id: Math.floor(Math.random()*100000), text: action.data };\r\n      newData.splice(-newData.length, 0, item);\r\n      return { ...state, data: newData }\r\n    \r\n    case 'REMOVE_ITEM':\r\n      const updatedData = state.data.filter((item) => item.id !== action.data);\r\n      return { ...state, data: updatedData}\r\n\r\n    case 'GET_INPUT_VALUE':\r\n      return { ...state, inputValue: action.data}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default general;","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport general from './app/reducers/index.js';\r\n\r\nconst combinedReducers = combineReducers({\r\n  general\r\n})\r\n\r\nconst store = createStore(\r\n  combinedReducers, \r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1 className={styles.title}>Just another ToDo</h1>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst ListItemComponent = (props) => {\r\n  const { content, removeItem } = props;\r\n\r\n  const remove = (e, id) => {\r\n    e.preventDefault();\r\n    removeItem(id)\r\n  }\r\n\r\n  return (\r\n    <li className={styles.listItem}>\r\n      {content.text}\r\n      <a href=\"\" onClick={(e) => {remove(e, content.id)}}>&Chi;</a>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ListItemComponent;","import React from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button className={styles.button} onClick={props.onClick}>{props.text}</button>\r\n  )\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    const { name, type, placeholder, onChange } = this.props;\r\n    return (\r\n        <input className={styles.input} name={name} type={type} placeholder={placeholder} onChange={(e) => onChange(e.target.value)}></input>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport ListItemComponent from '../listItem/listItemComponent.jsx';\r\nimport Button from '../../../ui/elements/button/Button.jsx';\r\nimport Input from '../../../ui/elements/input/Input.jsx';\r\nimport styles from './styles.module.scss';\r\n\r\nconst ListingComponent = (props) => {\r\n  const { data, inputValue, getInputValue, addItem, removeItem } = props;\r\n  \r\n  const addNewItem = (e, value) => {\r\n    e.preventDefault();\r\n    addItem(inputValue);\r\n  }\r\n\r\n  const content = data.length > 0\r\n    ? data.map((item) => {\r\n        return <ListItemComponent key={item.id} content={item} removeItem={removeItem}/>\r\n      })\r\n    : <li className={styles.emptyList}>There are no items</li>\r\n  \r\n  return (\r\n    <div className={styles.listingContainer}>\r\n      <div className={styles.listing}>\r\n        {content}\r\n      </div>\r\n      <div className={styles.buttonContainer}>\r\n        <Input placeholder=\"Type something\" onChange={getInputValue}/><a href=\"\" onClick={(e) => addNewItem(e, inputValue)}><Button text=\"Add Item\"/></a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListingComponent;\r\n","import { connect } from 'react-redux';\r\n\r\nimport ListingComponent from '../components/listing/ListingComponent.jsx';\r\n\r\nimport {\r\n  addItem,\r\n  removeItem,\r\n  getInputValue\r\n} from '../actions/actions.js';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { data, inputValue } = state.general;\r\n  return { data, inputValue };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (arg) => {\r\n    dispatch(addItem(arg));\r\n  },\r\n  removeItem: (arg) => {\r\n    dispatch(removeItem(arg));\r\n  },\r\n  getInputValue: (arg) => {\r\n    dispatch(getInputValue(arg));\r\n  }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListingComponent);","export const addItem = arg => dispatch => {\r\n  dispatch({\r\n    type: 'ADD_ITEM',\r\n    data: arg\r\n  })\r\n}\r\n\r\nexport const removeItem = arg => dispatch => {\r\n  dispatch({\r\n    type: 'REMOVE_ITEM',\r\n    data: arg\r\n  })\r\n}\r\n\r\nexport const getInputValue = arg => dispatch => {\r\n  dispatch({\r\n    type: 'GET_INPUT_VALUE',\r\n    data: arg\r\n  })\r\n}\r\n","import React from 'react';\n\nimport Header from './components/header/header.jsx';\nimport Listing from './containers/listingContainer.js';\nimport styles from './styles.module.scss';\n\nconst App = () => {\n  return (\n    <div className={styles.container}>\n      <Header />\n      <Listing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './app/App.jsx';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listingContainer\":\"styles_listingContainer__1NL6W\",\"listing\":\"styles_listing__11O0h\",\"emptyList\":\"styles_emptyList__31tkV\",\"buttonContainer\":\"styles_buttonContainer__1SxXh\"};"],"sourceRoot":""}